1.1)
double (double 2)
double (2 + 2)
(2 + 2) + (2 + 2)
8

1.2)
sum [x]
x + sum[]
x + 0
x

1.3)
product [] = 1
product (n:ns) = n * product ns

1.4)
qsort [] = []
qsort (x:xs) = qsort larger ++ [x] ++ qsort smaller
				where
					smaller = [a | a <- xs, a <= x]
					larger = [b | b <- xs, b > x]

1.5)
all duplicate values would be removed from the final sorted list, so [2,2,3,1,1] would become [1,2,3]

2.1)
'k

2.2)
(2^3)*4
(2*3)+(4*5)
2+(3*(4^5))

2.3)
n = a `div` length xs
    where
       a = 10
       xs = [1,2,3,4,5]

2.4)
last xs = head (reverse xs)
last xs = xs !! (length xs - 1)

2.5)
init xs = take (length xs - 1) xs
init xs = reverse (drop 1 (reverse xs))

3.1)
[char]
(char, char, char)
[(bool, char)]
([bool],[char])
[[a] -> [a]]

3.2)
bools = [True, False]
nums = [[2, 3, 4], [4, 5, 6]]
add x y z = x+y+z
copy a = (a, a)
apply a b = a b

3.3)
[a] -> a
(x, y) -> (y, x)
x -> y -> (x, y)
Num a => a -> a
Eq a => [a] -> bool
(a -> a) -> a -> a

3.4)
'k

3.5)
